---
- name: "{{ role_name }} | Checking for Distribution Config: {{ ansible_distribution }}"
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: distribution_config

- name: "{{ role_name }} | Run Tasks: {{ ansible_distribution }}"
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: distribution_config.stat.exists

- name: "Git | Set color.ui"
  community.general.git_config:
    name: color.ui
    scope: global
    value: auto

- name: "Git | Set diff.colorMoved"
  community.general.git_config:
    name: diff.colorMoved
    scope: global
    value: zebra

- name: "Git | Set fetch.prune"
  community.general.git_config:
    name: fetch.prune
    scope: global
    value: true

- name: "Git | Configure GitHub URL rewriting to use SSH"
  community.general.git_config:
    name: url.git@github.com:.insteadOf
    scope: global
    value: "https://github.com/"

- name: "Git | Set init.defaultBranch"
  community.general.git_config:
    name: init.defaultBranch
    scope: global
    value: main

- name: "Git | Set rerere.enabled"
  community.general.git_config:
    name: rerere.enabled
    scope: global
    value: true

- name: "Git | Set pull.ff"
  community.general.git_config:
    name: pull.ff
    scope: global
    value: only

- name: "Git | Set pull.rebase"
  community.general.git_config:
    name: pull.rebase
    scope: global
    value: true

- name: "Git | Set rebase.autoStash"
  community.general.git_config:
    name: rebase.autoStash
    scope: global
    value: true

- name: "Git | Ensure SSH directory exists"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.ssh"
    state: directory
    mode: "0700"

- name: "Git | Check if SSH private key exists"
  ansible.builtin.stat:
    path: "{{ ansible_user_dir }}/.ssh/id_ed25519"
  register: ssh_private_key

- name: "Git | Generate SSH key pair if not exists"
  community.crypto.openssh_keypair:
    path: "{{ ansible_user_dir }}/.ssh/id_ed25519"
    type: ed25519
    comment: "{{ git_user_email }}"
    mode: "0600"
  when: not ssh_private_key.stat.exists
  register: ssh_key_generated

- name: "Git | Display public key for GitHub setup (if key was generated)"
  ansible.builtin.debug:
    msg:
      - "üîë New SSH key generated!"
      - "üìã Add this public key to GitHub:"
      - "{{ lookup('file', ansible_user_dir + '/.ssh/id_ed25519.pub') }}"
      - ""
      - "üåê GitHub SSH settings: https://github.com/settings/keys"
  when: ssh_key_generated.changed

- name: "Git | Set user.email"
  community.general.git_config:
    name: user.email
    scope: global
    value: "{{ git_user_email }}"
  when: git_user_email is defined

- name: "Git | Set user.name"
  community.general.git_config:
    name: user.name
    scope: global
    value: "{{ git_user_name }}"

- name: "Git | Set user.signingkey"
  community.general.git_config:
    name: user.signingkey
    scope: global
    value: "{{ ansible_user_dir }}/.ssh/id_ed25519.pub"

- name: "Git | Set gpg.format"
  community.general.git_config:
    name: gpg.format
    scope: global
    value: ssh

- name: "Git | Set commit.gpgsign"
  community.general.git_config:
    name: commit.gpgsign
    scope: global
    value: true

- name: "Git | Set tag.gpgsign"
  community.general.git_config:
    name: tag.gpgsign
    scope: global
    value: true

- name: "Git | Ensure ~/.config/git/allowed_signers exists"
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/git"
    state: directory
    mode: "0755"

- name: "Git | Read current SSH public key"
  ansible.builtin.slurp:
    src: "{{ ansible_user_dir }}/.ssh/id_ed25519.pub"
  register: ssh_public_key

- name: "Git | Configure ~/.config/git/allowed_signers"
  ansible.builtin.copy:
    content: "{{ git_user_email }} namespaces=\"git\" {{ ssh_public_key.content | b64decode | trim }}"
    dest: "{{ ansible_user_dir }}/.config/git/allowed_signers"
    mode: "0600"
    backup: true

- name: "Git | Set gpg.ssh.allowedSignersFile"
  community.general.git_config:
    name: gpg.ssh.allowedSignersFile
    scope: global
    value: "{{ ansible_user_dir }}/.config/git/allowed_signers"

- name: "Git | Set undo alias"
  community.general.git_config:
    name: alias.undo
    scope: global
    value: "reset HEAD~1 --mixed"

- name: "Git | Set br alias"
  community.general.git_config:
    name: alias.br
    scope: global
    value: "branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate"


- name: "Git | Copy global.commit.template"
  ansible.builtin.copy:
    src: global.commit.template
    dest: "{{ ansible_user_dir }}/.config/git/commit_template"
    mode: "0644"

- name: "Git | Set commit.template"
  community.general.git_config:
    name: commit.template
    scope: global
    value: "{{ ansible_user_dir }}/.config/git/commit_template"
